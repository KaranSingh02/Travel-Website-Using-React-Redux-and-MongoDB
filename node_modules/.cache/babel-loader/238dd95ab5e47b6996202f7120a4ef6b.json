{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\My-Website-EVS\\\\src\\\\Components\\\\Profile.js\";\nimport React from 'react';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport { updateProfile } from './../Redux/Actions/index';\nimport { connect } from 'react-redux';\nimport { items } from \"./../Stitch/mongodb\";\nimport './../CSS/profile.css';\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault(); // calling update profile action type\n\n      this.props.updateProfile(this.state.name, this.state.email, this.state.age, this.state.bio, this.state.isAdmin, this.state.isDealer, this.state.isCustomer);\n    };\n\n    this.state = {\n      name: '',\n      age: 10,\n      email: '',\n      bio: '',\n      isAdmin: false,\n      isCustomer: false,\n      isDealer: false\n    };\n  }\n\n  async componentDidMount() {\n    //storing current user details\n    var curruser = this.props.reducerState.userReducer.currentuser; //storing if dealer or custoemr\n\n    var dealer = this.props.reducerState.userReducer.dealer;\n    var customer = this.props.reducerState.userReducer.customer; //getting data from db\n\n    var result = await items.find({}).toArray(); //checking if the user details are present  in db or not\n\n    var ispresent = result.some(item => item.owner_id === curruser.id);\n\n    if (ispresent) {\n      //if user details are present then filtering it out to a new array\n      //var result = details.filter(item => item.owner_id === curruser.id);\n      console.log(result); //setting the state values\n\n      this.setState({\n        //name: details[0].name,\n        //email: details[0].email,\n        //age: details[0].age,\n        //bio: details[0].bio\n        name: result[0].name,\n        email: result[0].email,\n        age: result[0].age,\n        bio: result[0].bio,\n        isAdmin: result[0].isAdmin,\n        isDealer: result[0].isDealer,\n        isCustomer: result[0].isCustomer\n      });\n    } else {\n      this.setState({\n        isAdmin: false,\n        isDealer: dealer,\n        isCustomer: customer\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"profilediv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.state.isDealer && React.createElement(\"h2\", {\n      className: \"heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \" Welcome to your Profile Dealer \"), this.state.isCustomer && React.createElement(\"h2\", {\n      className: \"heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \" Welcome to your Profile Customer \"), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      style: {\n        paddingTop: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      style: {\n        paddingLeft: '450px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasicName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      style: {\n        color: 'white',\n        fontFamily: 'Courier',\n        fontWeight: 'bolder'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Name\"), React.createElement(Form.Control, {\n      required: true,\n      type: \"text\",\n      value: this.state.name,\n      onChange: e => this.setState({\n        name: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      style: {\n        color: 'white',\n        fontFamily: 'Courier',\n        fontWeight: 'bolder'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Email address\"), React.createElement(Form.Control, {\n      required: true,\n      type: \"email\",\n      value: this.state.email,\n      onChange: e => this.setState({\n        email: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }))), React.createElement(Form.Row, {\n      style: {\n        paddingLeft: '450px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasicBio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      style: {\n        color: 'white',\n        fontFamily: 'Courier',\n        fontWeight: 'bolder'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"About\"), React.createElement(Form.Control, {\n      required: true,\n      as: \"textarea\",\n      rows: \"3\",\n      cols: \"58\",\n      value: this.state.bio,\n      onChange: e => this.setState({\n        bio: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }))), React.createElement(Form.Row, {\n      style: {\n        paddingLeft: '580px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      md: \"3\",\n      controlId: \"formBasicName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      style: {\n        color: 'white',\n        fontFamily: 'Courier',\n        fontWeight: 'bolder'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Age\"), React.createElement(Form.Control, {\n      required: true,\n      type: \"number\",\n      value: this.state.age,\n      min: 10,\n      max: 100,\n      onChange: e => this.setState({\n        age: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Form.Group, {\n      as: Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      as: \"legend\",\n      column: true,\n      sm: 2,\n      style: {\n        color: 'black',\n        fontFamily: 'Courier'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"User Type\"), React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Form.Check, {\n      type: \"radio\",\n      label: \"Dealer\",\n      value: this.state.isDealer,\n      name: \"formHorizontalRadios\",\n      id: \"formHorizontalRadios1\",\n      style: {\n        color: 'black',\n        fontFamily: 'Courier'\n      },\n      onClick: e => this.setState({\n        isDealer: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(Form.Check, {\n      type: \"radio\",\n      label: \"Customer\",\n      value: this.state.isCustomer,\n      name: \"formHorizontalRadios\",\n      id: \"formHorizontalRadios2\",\n      style: {\n        color: 'black',\n        fontFamily: 'Courier'\n      },\n      onClick: e => this.setState({\n        isCustomer: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Update Profile\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  reducerState: state\n});\n\nconst mapDispatchToProps = {\n  updateProfile\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);","map":{"version":3,"sources":["E:/React/My-Website-EVS/src/Components/Profile.js"],"names":["React","Form","Button","Col","updateProfile","connect","items","Profile","Component","constructor","props","handleSubmit","e","preventDefault","state","name","email","age","bio","isAdmin","isDealer","isCustomer","componentDidMount","curruser","reducerState","userReducer","currentuser","dealer","customer","result","find","toArray","ispresent","some","item","owner_id","id","console","log","setState","render","paddingTop","paddingLeft","color","fontFamily","fontWeight","target","value","Row","mapStateToProps","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAaC,MAAb,EAAoBC,GAApB,QAA8B,iBAA9B;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,OAAO,sBAAP;;AAEA,MAAMC,OAAN,SAAsBP,KAAK,CAACQ,SAA5B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAmDlBC,YAnDkB,GAmDFC,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACC,cAAF,GADkB,CAElB;;AACA,WAAKH,KAAL,CAAWN,aAAX,CAAyB,KAAKU,KAAL,CAAWC,IAApC,EAA0C,KAAKD,KAAL,CAAWE,KAArD,EAA4D,KAAKF,KAAL,CAAWG,GAAvE,EAA4E,KAAKH,KAAL,CAAWI,GAAvF,EAA4F,KAAKJ,KAAL,CAAWK,OAAvG,EAAgH,KAAKL,KAAL,CAAWM,QAA3H,EAAqI,KAAKN,KAAL,CAAWO,UAAhJ;AACH,KAvDiB;;AAEd,SAAKP,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETE,MAAAA,GAAG,EAAE,EAFI;AAGTD,MAAAA,KAAK,EAAE,EAHE;AAITE,MAAAA,GAAG,EAAE,EAJI;AAKTC,MAAAA,OAAO,EAAE,KALA;AAMTE,MAAAA,UAAU,EAAE,KANH;AAOTD,MAAAA,QAAQ,EAAE;AAPD,KAAb;AASH;;AAED,QAAME,iBAAN,GAA0B;AACtB;AACA,QAAIC,QAAQ,GAAG,KAAKb,KAAL,CAAWc,YAAX,CAAwBC,WAAxB,CAAoCC,WAAnD,CAFsB,CAGtB;;AACA,QAAIC,MAAM,GAAG,KAAKjB,KAAL,CAAWc,YAAX,CAAwBC,WAAxB,CAAoCE,MAAjD;AACA,QAAIC,QAAQ,GAAG,KAAKlB,KAAL,CAAWc,YAAX,CAAwBC,WAAxB,CAAoCG,QAAnD,CALsB,CAMtB;;AACA,QAAIC,MAAM,GAAG,MAAMvB,KAAK,CAACwB,IAAN,CAAW,EAAX,EAAeC,OAAf,EAAnB,CAPsB,CAQtB;;AACA,QAAIC,SAAS,GAAGH,MAAM,CAACI,IAAP,CAAYC,IAAI,IAAIA,IAAI,CAACC,QAAL,KAAkBZ,QAAQ,CAACa,EAA/C,CAAhB;;AACA,QAAIJ,SAAJ,EAAe;AACX;AACA;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ,EAHW,CAIX;;AACA,WAAKU,QAAL,CAAc;AACV;AACA;AACA;AACA;AACAxB,QAAAA,IAAI,EAAEc,MAAM,CAAC,CAAD,CAAN,CAAUd,IALN;AAMVC,QAAAA,KAAK,EAAEa,MAAM,CAAC,CAAD,CAAN,CAAUb,KANP;AAOVC,QAAAA,GAAG,EAAEY,MAAM,CAAC,CAAD,CAAN,CAAUZ,GAPL;AAQVC,QAAAA,GAAG,EAAEW,MAAM,CAAC,CAAD,CAAN,CAAUX,GARL;AASVC,QAAAA,OAAO,EAAEU,MAAM,CAAC,CAAD,CAAN,CAAUV,OATT;AAUVC,QAAAA,QAAQ,EAAES,MAAM,CAAC,CAAD,CAAN,CAAUT,QAVV;AAWVC,QAAAA,UAAU,EAAEQ,MAAM,CAAC,CAAD,CAAN,CAAUR;AAXZ,OAAd;AAaH,KAlBD,MAmBK;AACD,WAAKkB,QAAL,CAAc;AACVpB,QAAAA,OAAO,EAAE,KADC;AAEVC,QAAAA,QAAQ,EAAEO,MAFA;AAGVN,QAAAA,UAAU,EAAEO;AAHF,OAAd;AAKH;AACJ;;AAQDY,EAAAA,MAAM,GAAE;AAEJ,WACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAK1B,KAAL,CAAWM,QAAX,IAAuB;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAD5B,EAEK,KAAKN,KAAL,CAAWO,UAAX,IAAyB;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAF9B,EAGA,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKV,YAArB;AAAmC,MAAA,KAAK,EAAE;AAAE8B,QAAAA,UAAU,EAAE;AAAd,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,KAAK,EAAE;AAAEC,QAAAA,WAAW,EAAE;AAAf,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,UAAU,EAAE,SAA9B;AAAyCC,QAAAA,UAAU,EAAE;AAArD,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADR,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,QAAQ,MAAtB;AAAuB,MAAA,IAAI,EAAC,MAA5B;AAAoC,MAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWC,IAAtD;AAA4D,MAAA,QAAQ,EAAEH,CAAC,IAAI,KAAK2B,QAAL,CAAc;AAACxB,QAAAA,IAAI,EAACH,CAAC,CAACkC,MAAF,CAASC;AAAf,OAAd,CAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,sDAMI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE;AAAEJ,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,UAAU,EAAE,SAA9B;AAAyCC,QAAAA,UAAU,EAAE;AAArD,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADR,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,QAAQ,MAAtB;AAAuB,MAAA,IAAI,EAAC,OAA5B;AAAqC,MAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWE,KAAvD;AAA8D,MAAA,QAAQ,EAAEJ,CAAC,IAAI,KAAK2B,QAAL,CAAc;AAACvB,QAAAA,KAAK,EAAEJ,CAAC,CAACkC,MAAF,CAASC;AAAjB,OAAd,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CANJ,CAFJ,EAcI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,KAAK,EAAE;AAAEL,QAAAA,WAAW,EAAE;AAAf,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,UAAU,EAAE,SAA9B;AAAyCC,QAAAA,UAAU,EAAE;AAArD,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADR,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,QAAQ,MAAtB;AAAuB,MAAA,EAAE,EAAC,UAA1B;AAAqC,MAAA,IAAI,EAAC,GAA1C;AAA8C,MAAA,IAAI,EAAC,IAAnD;AAAwD,MAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWI,GAA1E;AAA+E,MAAA,QAAQ,EAAEN,CAAC,IAAI,KAAK2B,QAAL,CAAc;AAACrB,QAAAA,GAAG,EAACN,CAAC,CAACkC,MAAF,CAASC;AAAd,OAAd,CAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CAdJ,EAsBI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,KAAK,EAAE;AAAEL,QAAAA,WAAW,EAAE;AAAf,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAEvC,GAAhB;AAAqB,MAAA,EAAE,EAAC,GAAxB;AAA4B,MAAA,SAAS,EAAC,eAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE;AAAEwC,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,UAAU,EAAE,SAA9B;AAAyCC,QAAAA,UAAU,EAAE;AAArD,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADR,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,QAAQ,MAAtB;AAAuB,MAAA,IAAI,EAAC,QAA5B;AAAqC,MAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWG,GAAvD;AAA4D,MAAA,GAAG,EAAE,EAAjE;AAAqE,MAAA,GAAG,EAAE,GAA1E;AAA+E,MAAA,QAAQ,EAAEL,CAAC,IAAI,KAAK2B,QAAL,CAAc;AAAEtB,QAAAA,GAAG,EAAEL,CAAC,CAACkC,MAAF,CAASC;AAAhB,OAAd,CAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,sDAMI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAIC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAC,QAAf;AAAwB,MAAA,MAAM,MAA9B;AAA+B,MAAA,EAAE,EAAE,CAAnC;AAAsC,MAAA,KAAK,EAAE;AAAEL,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,UAAU,EAAE;AAA9B,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADR,EAIA,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,KAAK,EAAC,QAFV;AAGI,MAAA,KAAK,EAAE,KAAK9B,KAAL,CAAWM,QAHtB;AAII,MAAA,IAAI,EAAC,sBAJT;AAKI,MAAA,EAAE,EAAC,uBALP;AAMI,MAAA,KAAK,EAAE;AAAEuB,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,UAAU,EAAE;AAA9B,OANX;AAOI,MAAA,OAAO,EAAEhC,CAAC,IAAI,KAAK2B,QAAL,CAAc;AAAEnB,QAAAA,QAAQ,EAAE;AAAZ,OAAd,CAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAUI,oBAAC,IAAD,CAAM,KAAN;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,KAAK,EAAC,UAFV;AAGI,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWO,UAHtB;AAII,MAAA,IAAI,EAAC,sBAJT;AAKI,MAAA,EAAE,EAAC,uBALP;AAMI,MAAA,KAAK,EAAE;AAAEsB,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,UAAU,EAAE;AAA9B,OANX;AAOI,MAAA,OAAO,EAAEhC,CAAC,IAAI,KAAK2B,QAAL,CAAc;AAAElB,QAAAA,UAAU,EAAE;AAAd,OAAd,CAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CAJA,CANJ,CAtBJ,EAwDe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxDf,EA4DQ,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBA5DR,CAHA,CADJ;AAsEH;;AAlIiC;;AAqItC,MAAM4B,eAAe,GAAInC,KAAD,KAAY;AAC5BU,EAAAA,YAAY,EAAEV;AADc,CAAZ,CAAxB;;AAKA,MAAMoC,kBAAkB,GAAG;AACvB9C,EAAAA;AADuB,CAA3B;AAIA,eAAeC,OAAO,CAAC4C,eAAD,EAAkBC,kBAAlB,CAAP,CAA6C3C,OAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport {Form,Button,Col} from 'react-bootstrap';\r\nimport { updateProfile } from './../Redux/Actions/index';\r\nimport {connect} from 'react-redux';\r\nimport { items } from \"./../Stitch/mongodb\";\r\nimport './../CSS/profile.css';\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            name: '',\r\n            age: 10,\r\n            email: '',\r\n            bio: '',\r\n            isAdmin: false,\r\n            isCustomer: false,\r\n            isDealer: false\r\n        }\r\n    }\r\n\r\n    async componentDidMount (){\r\n        //storing current user details\r\n        var curruser = this.props.reducerState.userReducer.currentuser; \r\n        //storing if dealer or custoemr\r\n        var dealer = this.props.reducerState.userReducer.dealer;\r\n        var customer = this.props.reducerState.userReducer.customer; \r\n        //getting data from db\r\n        var result = await items.find({}).toArray();\r\n        //checking if the user details are present  in db or not\r\n        var ispresent = result.some(item => item.owner_id === curruser.id);\r\n        if (ispresent) {\r\n            //if user details are present then filtering it out to a new array\r\n            //var result = details.filter(item => item.owner_id === curruser.id);\r\n            console.log(result);\r\n            //setting the state values\r\n            this.setState({\r\n                //name: details[0].name,\r\n                //email: details[0].email,\r\n                //age: details[0].age,\r\n                //bio: details[0].bio\r\n                name: result[0].name,\r\n                email: result[0].email,\r\n                age: result[0].age,\r\n                bio: result[0].bio,\r\n                isAdmin: result[0].isAdmin,\r\n                isDealer: result[0].isDealer,\r\n                isCustomer: result[0].isCustomer\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                isAdmin: false,\r\n                isDealer: dealer,\r\n                isCustomer: customer\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // calling update profile action type\r\n        this.props.updateProfile(this.state.name, this.state.email, this.state.age, this.state.bio, this.state.isAdmin, this.state.isDealer, this.state.isCustomer);        \r\n    }\r\n\r\n    render(){\r\n        \r\n        return (\r\n            <div className=\"profilediv\">\r\n                {this.state.isDealer && <h2 className=\"heading\"> Welcome to your Profile Dealer </h2>}\r\n                {this.state.isCustomer && <h2 className=\"heading\"> Welcome to your Profile Customer </h2>}\r\n            <Form onSubmit={this.handleSubmit} style={{ paddingTop: \"20px\" }}>\r\n\r\n                <Form.Row style={{ paddingLeft: '450px' }}>\r\n                    <Form.Group controlId=\"formBasicName\">\r\n                            <Form.Label style={{ color: 'white', fontFamily: 'Courier', fontWeight: 'bolder' }}>Name</Form.Label>\r\n                        <Form.Control required type=\"text\"  value={this.state.name} onChange={e => this.setState({name:e.target.value})}/>\r\n                    </Form.Group>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   \r\n\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label style={{ color: 'white', fontFamily: 'Courier', fontWeight: 'bolder' }}>Email address</Form.Label>\r\n                        <Form.Control required type=\"email\"  value={this.state.email} onChange={e => this.setState({email: e.target.value})}/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row style={{ paddingLeft: '450px' }}>\r\n                    <Form.Group controlId=\"formBasicBio\">\r\n                            <Form.Label style={{ color: 'white', fontFamily: 'Courier', fontWeight: 'bolder' }}>About</Form.Label>\r\n                        <Form.Control required as=\"textarea\" rows=\"3\" cols=\"58\" value={this.state.bio} onChange={e => this.setState({bio:e.target.value})}/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n\r\n                <Form.Row style={{ paddingLeft: '580px' }}>\r\n                    <Form.Group as={Col} md=\"3\" controlId=\"formBasicName\">\r\n                            <Form.Label style={{ color: 'white', fontFamily: 'Courier', fontWeight: 'bolder' }}>Age</Form.Label>\r\n                        <Form.Control required type=\"number\" value={this.state.age} min={10} max={100} onChange={e => this.setState({ age: e.target.value })} />\r\n                    </Form.Group>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   \r\n\r\n                    <Form.Group as = {Row}>\r\n                            <Form.Label as=\"legend\" column sm={2} style={{ color: 'black', fontFamily: 'Courier'}}>\r\n                        User Type\r\n                     </Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Dealer\"\r\n                            value={this.state.isDealer}                            \r\n                            name=\"formHorizontalRadios\"\r\n                            id=\"formHorizontalRadios1\"\r\n                            style={{ color: 'black', fontFamily: 'Courier' }}\r\n                            onClick={e => this.setState({ isDealer: true })}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Customer\"\r\n                            value={this.state.isCustomer}                            \r\n                            name=\"formHorizontalRadios\"\r\n                            id=\"formHorizontalRadios2\"\r\n                            style={{ color: 'black', fontFamily: 'Courier' }}   \r\n                            onClick={e => this.setState({ isCustomer: true })}\r\n                        />\r\n                    </Col>\r\n                      </Form.Group>\r\n\r\n\r\n\r\n                </Form.Row><br />\r\n\r\n\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Update Profile\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n        reducerState: state      \r\n})\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    updateProfile\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);"]},"metadata":{},"sourceType":"module"}