{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\My-Website-EVS\\\\src\\\\Components\\\\Profile.js\";\nimport React from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport updateProfile from './../Redux/Actions/UpdateProfile';\nimport { connect } from 'react-redux';\nimport { items } from \"./../Stitch/mongodb\";\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault(); // calling update profile action type\n\n      this.props.updateProfile(this.state.name, this.state.email, this.state.age, this.state.bio);\n    };\n\n    this.state = {\n      name: '',\n      age: 10,\n      email: '',\n      bio: ''\n    };\n  }\n\n  async componentDidMount() {\n    //storing current user details\n    var curruser = this.props.reducerState.userReducer.currentuser; //getting data from db\n\n    var details = await items.find({\n      \"owner_id\": curruser.id\n    }).toArray(); //checking if the user details are present  in db or not\n    //var ispresent = details.some(item => item.owner_id === curruser.id);\n\n    console.log(\"Profile:- \" + details);\n\n    if (details) {\n      //if user details are present then filtering it out to a new array\n      //var result = details.filter( item => item.owner_id === curruser.id);\n      //setting the state values\n      this.setState({\n        name: details[0].name,\n        email: details[0].email,\n        age: details[0].age,\n        bio: details[0].bio\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasicName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Name\"), React.createElement(Form.Control, {\n      required: true,\n      type: \"text\",\n      value: this.state.name,\n      onChange: e => this.setState({\n        name: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Email address\"), React.createElement(Form.Control, {\n      required: true,\n      type: \"email\",\n      value: this.state.email,\n      onChange: e => this.setState({\n        email: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formBasicName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Age\"), React.createElement(Form.Control, {\n      required: true,\n      type: \"number\",\n      value: this.state.age,\n      min: 10,\n      max: 100,\n      onChange: e => this.setState({\n        age: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formBasicBio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"About\"), React.createElement(Form.Control, {\n      required: true,\n      as: \"textarea\",\n      rows: \"3\",\n      value: this.state.bio,\n      onChange: e => this.setState({\n        bio: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Update Profile\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  reducerState: state\n});\n\nconst mapDispatchToProps = {\n  updateProfile\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);","map":{"version":3,"sources":["E:/React/My-Website-EVS/src/Components/Profile.js"],"names":["React","Form","Button","updateProfile","connect","items","Profile","Component","constructor","props","handleSubmit","e","preventDefault","state","name","email","age","bio","componentDidMount","curruser","reducerState","userReducer","currentuser","details","find","id","toArray","console","log","setState","render","target","value","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Form,Button} from 'react-bootstrap';\r\nimport updateProfile from './../Redux/Actions/UpdateProfile';\r\nimport {connect} from 'react-redux';\r\nimport { items } from \"./../Stitch/mongodb\";\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            name: '',\r\n            age: 10,\r\n            email: '',\r\n            bio:''          \r\n        }\r\n    }\r\n\r\n    async componentDidMount (){\r\n        //storing current user details\r\n        var curruser = this.props.reducerState.userReducer.currentuser; \r\n        //getting data from db\r\n        var details = await items.find({ \"owner_id\": curruser.id }).toArray();\r\n        //checking if the user details are present  in db or not\r\n        //var ispresent = details.some(item => item.owner_id === curruser.id);\r\n        console.log(\"Profile:- \" + details)\r\n        if(details){\r\n            //if user details are present then filtering it out to a new array\r\n            //var result = details.filter( item => item.owner_id === curruser.id);\r\n            //setting the state values\r\n            this.setState({\r\n                name: details[0].name,\r\n                email: details[0].email,\r\n                age: details[0].age,\r\n                bio: details[0].bio\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n       // calling update profile action type\r\n        this.props.updateProfile(this.state.name,this.state.email,this.state.age,this.state.bio);        \r\n    }\r\n\r\n    render(){\r\n        \r\n        return (\r\n       \r\n            <Form onSubmit={this.handleSubmit}>\r\n                   \r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control required type=\"text\"  value={this.state.name} onChange={e => this.setState({name:e.target.value})}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control required type=\"email\"  value={this.state.email} onChange={e => this.setState({email: e.target.value})}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>Age</Form.Label>\r\n                        <Form.Control required type=\"number\"  value={this.state.age} min={10} max={100} onChange={e => this.setState({age:e.target.value})}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicBio\">\r\n                        <Form.Label>About</Form.Label>\r\n                        <Form.Control required as=\"textarea\" rows=\"3\" value={this.state.bio} onChange={e => this.setState({bio:e.target.value})}/>\r\n                    </Form.Group>\r\n                    \r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Update Profile\r\n                    </Button>\r\n                </Form>\r\n               \r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n        reducerState: state      \r\n})\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    updateProfile\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);"]},"metadata":{},"sourceType":"module"}