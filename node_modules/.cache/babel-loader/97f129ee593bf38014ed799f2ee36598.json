{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\My-Website-EVS\\\\src\\\\Components\\\\Navbar.js\";\nimport React from 'react';\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport logoutUserAction from './../Redux/Actions/LogoutUser';\nimport { items } from \"./../Stitch/mongodb\";\n\nclass Menu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLogout = e => {\n      e.preventDefault(); //calling the logout action creator \n\n      this.props.logoutUserAction();\n    };\n\n    this.state = {\n      isAdmin: false,\n      isDealer: false,\n      isCustomer: false\n    };\n  }\n\n  async componentDidMount() {\n    //storing current user details\n    var curruser = this.props.isLogIn.userReducer.currentuser;\n    var dealer = this.props.isLogIn.userReducer.dealer;\n    var customer = this.props.isLogIn.userReducer.custoemr; //getting data from db\n\n    if (curruser != null) {\n      var details = await items.find({}).toArray();\n      console.log(\"checking is dealer\" + customer); //checking if the user details are present  in db or not\n\n      var ispresent = details.some(item => item.owner_id === curruser.id);\n      console.log(\"checking ispresent\" + ispresent);\n      var result = details.filter(item => item.owner_id === curruser.id);\n\n      if (ispresent) {\n        //setting the state values\n        this.setState({\n          isAdmin: result[0].isAdmin,\n          isCustomer: result[0].isCustomer,\n          isDealer: result[0].isDealer\n        });\n      } else {\n        //setting the state values\n        this.setState({\n          isCustomer: customer,\n          isDealer: dealer\n        });\n      }\n    }\n  }\n\n  render() {\n    //storing boolean value of isLoggedInUesr\n    var check = this.props.isLogIn.userReducer.check;\n    return React.createElement(Navbar, {\n      bg: \"info\",\n      variant: \"light\",\n      sticky: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Navbar.Brand, {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Know The World\"), React.createElement(Nav, {\n      className: \"mr-auto\",\n      style: {\n        paddingLeft: '340px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, check && React.createElement(Nav.Link, {\n      href: \"/home\",\n      style: {\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Home\"), check && React.createElement(Nav.Link, {\n      href: \"/cities\",\n      style: {\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Wonders\"), check && (this.state.isCustomer || this.state.isAdmin) && React.createElement(Nav.Link, {\n      href: \"/buy_tickets\",\n      style: {\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Tickets\"), check && this.state.isDealer && React.createElement(Nav.Link, {\n      href: \"/booking_requests\",\n      style: {\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Booking Requests\"), check && React.createElement(NavDropdown, {\n      title: \"Profile\",\n      style: {\n        fontWeight: 'bold'\n      },\n      id: \"basic-nav-dropdown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(NavDropdown.Item, {\n      href: \"/profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"User Details\"), React.createElement(NavDropdown.Item, {\n      href: \"/settings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Settings\"), React.createElement(NavDropdown.Item, {\n      href: \"#action/3.3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Something\"), React.createElement(NavDropdown.Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(NavDropdown.Item, {\n      onClick: this.handleLogout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Logout\")), !check && this.state.isAdmin && React.createElement(Nav.Link, {\n      href: \"/register\",\n      style: {\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Register\"), !check && React.createElement(Nav.Link, {\n      href: \"/register\",\n      style: {\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Register\"), !check && React.createElement(Nav.Link, {\n      href: \"/login\",\n      style: {\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"LogIn\")));\n  }\n\n} //Accessing the state of the reducer \n\n\nconst mapStateToProps = state => ({\n  isLogIn: state\n}); //using action to logout user\n\n\nconst mapDispatchToProps = {\n  logoutUserAction\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Menu));","map":{"version":3,"sources":["E:/React/My-Website-EVS/src/Components/Navbar.js"],"names":["React","Navbar","Nav","NavDropdown","withRouter","connect","logoutUserAction","items","Menu","Component","constructor","props","handleLogout","e","preventDefault","state","isAdmin","isDealer","isCustomer","componentDidMount","curruser","isLogIn","userReducer","currentuser","dealer","customer","custoemr","details","find","toArray","console","log","ispresent","some","item","owner_id","id","result","filter","setState","render","check","paddingLeft","fontWeight","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport logoutUserAction from './../Redux/Actions/LogoutUser';\r\nimport { items } from \"./../Stitch/mongodb\";\r\n\r\nclass Menu extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isAdmin: false,\r\n            isDealer: false,\r\n            isCustomer: false\r\n        }\r\n    }\r\n    \r\n    handleLogout = (e) => {\r\n        e.preventDefault();\r\n        //calling the logout action creator \r\n        this.props.logoutUserAction();\r\n    }\r\n\r\n    async componentDidMount() {\r\n        //storing current user details\r\n        var curruser = this.props.isLogIn.userReducer.currentuser;\r\n        var dealer = this.props.isLogIn.userReducer.dealer;\r\n        var customer = this.props.isLogIn.userReducer.custoemr;\r\n        //getting data from db\r\n        if (curruser != null) {\r\n            var details = await items.find({}).toArray();\r\n            console.log(\"checking is dealer\" + customer);\r\n            //checking if the user details are present  in db or not\r\n            var ispresent = details.some(item => item.owner_id === curruser.id);\r\n            console.log(\"checking ispresent\" + ispresent);\r\n            var result = details.filter(item => item.owner_id === curruser.id);\r\n            if (ispresent) {\r\n                //setting the state values\r\n                this.setState({\r\n                    isAdmin: result[0].isAdmin,\r\n                    isCustomer: result[0].isCustomer,\r\n                    isDealer: result[0].isDealer\r\n                })\r\n            }\r\n            else{\r\n                //setting the state values\r\n                this.setState({\r\n                    isCustomer: customer,\r\n                    isDealer: dealer\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //storing boolean value of isLoggedInUesr\r\n        var check = this.props.isLogIn.userReducer.check;\r\n        \r\n        return(\r\n            <Navbar bg=\"info\" variant=\"light\" sticky=\"top\" >\r\n                <Navbar.Brand href=\"/\">Know The World</Navbar.Brand>\r\n                <Nav className=\"mr-auto\" style={{ paddingLeft: '340px' }}>\r\n                    {check && <Nav.Link href=\"/home\" style={{ fontWeight: 'bold' }}>Home</Nav.Link> }\r\n                    {/* Showing and Hiding Links depending on whether a user is logged in or not */}\r\n                    {check && < Nav.Link href='/cities' style={{ fontWeight: 'bold' }}>Wonders</Nav.Link>}\r\n                    {check && (this.state.isCustomer || this.state.isAdmin) && <Nav.Link href='/buy_tickets' style={{ fontWeight: 'bold' }}>Tickets</Nav.Link>}\r\n                    {check && this.state.isDealer && <Nav.Link href='/booking_requests' style={{ fontWeight: 'bold' }}>Booking Requests</Nav.Link>}\r\n                    {check && <NavDropdown title=\"Profile\" style={{ fontWeight: 'bold' }} id=\"basic-nav-dropdown\">\r\n                        <NavDropdown.Item href=\"/profile\">User Details</NavDropdown.Item>\r\n                        <NavDropdown.Item href=\"/settings\">Settings</NavDropdown.Item>\r\n                        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                        <NavDropdown.Divider />\r\n                        <NavDropdown.Item onClick={this.handleLogout}>Logout</NavDropdown.Item>\r\n                    </NavDropdown> }\r\n                    {!check && this.state.isAdmin && < Nav.Link href='/register' style={{ fontWeight: 'bold' }}>Register</Nav.Link>}\r\n                    {!check && <Nav.Link href='/register' style={{ fontWeight: 'bold' }}>Register</Nav.Link>}\r\n                    {!check && <Nav.Link href='/login' style={{ fontWeight: 'bold' }}>LogIn</Nav.Link>}\r\n                </Nav>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\n//Accessing the state of the reducer \r\nconst mapStateToProps = (state) => ({\r\n        isLogIn: state      \r\n})\r\n//using action to logout user\r\nconst mapDispatchToProps = {\r\n    logoutUserAction\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(Menu));"]},"metadata":{},"sourceType":"module"}